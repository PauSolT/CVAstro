---
import { LanguageSelector } from "astro-i18next/components";
import NavComponent from "./NavComponent.astro";

import { t } from "i18next";
// @ts-ignore
import { localizePath } from "astro-i18next";

const { pathname } = Astro.url;

---

<header>
    <!-- <LanguageSelector  class="customLanguageSelector"/>
    <button id="es">español { localizePath(pathname , "es") }</button>
    <button id="en">español {  localizePath(pathname , "en")}</button>
    <button id="ca">español {  localizePath(pathname , "ca")}</button> -->
    
    <a href={localizePath(pathname , "es")}>Español</a>
    <a href={localizePath(pathname , "en")}>English</a>
    <a href={localizePath(pathname , "ca")}>Català</a>
    
    <nav class="desktop">
        <NavComponent link={localizePath("/")} content={t("home")} />
        <NavComponent link={localizePath("/games")} content={t("games")} />
        <NavComponent link={localizePath("/about#")} content={t("about")} />
        <NavComponent link={localizePath("/about#contactMe")} content={t("contactMe")} />
    </nav>
    <div class="dropdown">
        <button class="dropbtn">{t("menu")}</button>
        <div class="dropdown-content">
            <a class="component" href={localizePath("/")}>{t("home")}</a>
            <a class="component" href="/games">{t("games")}</a>
            <a class="component" href="/about">{t("about")}</a>
            <a class="component" href="/about">{t("contactMe")}</a>
        </div>
    </div>
</header>

<style>
    header {
        width: 100%;
        height: 3rem;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin-right: 2vw;
        background-color: #1f2833;
        color: #c5c6c7;
        position: sticky;
        top: 0;
    }

    .customLanguageSelector {
        font-family: inherit;
        background-color: #57ccc6;
        color: #242424;
        border-radius: 5px;
        margin: 10px;
        padding: 5px;
    }

    .desktop {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
        align-self: center;
        flex-grow: 2;
        align-items: flex-end;
        max-width: 40%;
    }

    .desktop > a {
        color: inherit;
        text-decoration: none;
    }

    .headerElement {
        padding: 1%;
    }
    .headerElement:hover {
        background-color: #c5c6c7;
        color: #1f2833;
        cursor: pointer;
        border-radius: 5px;
        transition:
            color 0.2s ease-in-out,
            background-color 0.2s ease-in-out;
    }

    .dropbtn {
        background-color: #57ccc6;
        color: #242424;
        font-size: clamp(1rem, 1.5vw, 2rem);
        border: none;
        border-radius: 5px;
        padding-top: 10%;
        padding-bottom: 5%;
        width: 70px;
        text-align: center;
    }

    .dropdown {
        position: relative;
        display: inline-block;
        align-self: center;
        margin-right: 8%;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #c5c6c7;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        z-index: 1;
        right: 0;
        border-radius: 5px;
    }

    .dropdown-content a {
        color: #45a29e;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
    }

    .dropdown-content a:hover {
        background-color: #ddd;
    }

    .dropdown:hover .dropdown-content {
        display: block;
    }

    .dropdown:hover .dropbtn {
        background-color: #45a29e;
    }

    @media only screen and (min-width: 760px) {
        .dropdown {
            display: none;
        }
    }

    @media only screen and (max-width: 760px) {
        #language {
            max-width: 35%;
        }

        .desktop {
            display: none;
        }
    }
</style>

<script>
    const buttonEn = document.getElementById("en");
    const buttonEs = document.getElementById("es");
    const buttonCa = document.getElementById("ca");

    buttonEn?.addEventListener('click', () => cl(""));
    buttonEs?.addEventListener('click', () => cl("es"));
    buttonCa?.addEventListener('click', () => cl("ca"));


    function cl(l: string){
        console.log(location)
        localizePath()
        // const pathSplit = location.pathname.split("/");
        // pathSplit.splice(0, 1);
        // if (pathSplit.length >= 2)
        // {
        //     console.log(pathSplit)
        // } else {
        //     console.log(pathSplit)
        // }
        // location = "/" + l;
    }
</script>
